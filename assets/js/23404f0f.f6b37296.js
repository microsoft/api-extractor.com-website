"use strict";(self.webpackChunkapi_extractor_com=self.webpackChunkapi_extractor_com||[]).push([[6055],{158:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(6393);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=n,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||s;return r?a.createElement(f,o(o({ref:t},p),{},{components:r})):a.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:n,o[1]=i;for(var c=2;c<s;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5233:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var a=r(9122),n=r(2501),s=(r(6393),r(158)),o=["components"],i={title:"ae-different-release-tags"},l=void 0,c={unversionedId:"pages/messages/ae-different-release-tags",id:"pages/messages/ae-different-release-tags",title:"ae-different-release-tags",description:'"This symbol has another declaration with a different release tag."',source:"@site/docs/pages/messages/ae-different-release-tags.md",sourceDirName:"pages/messages",slug:"/pages/messages/ae-different-release-tags",permalink:"/pages/messages/ae-different-release-tags",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/api-extractor.com/docs/pages/messages/ae-different-release-tags.md",tags:[],version:"current",frontMatter:{title:"ae-different-release-tags"},sidebar:"docsSidebar",previous:{title:"ae-cyclic-inherit-doc",permalink:"/pages/messages/ae-cyclic-inherit-doc"},next:{title:"ae-extra-release-tag",permalink:"/pages/messages/ae-extra-release-tag"}},p={},m=[{value:"Remarks",id:"remarks",level:2},{value:"How to fix",id:"how-to-fix",level:2},{value:"See also",id:"see-also",level:2}],u={toc:m},d="wrapper";function f(e){var t=e.components,r=(0,n.Z)(e,o);return(0,s.kt)(d,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},'"This symbol has another declaration with a different release tag."')),(0,s.kt)("h2",{id:"remarks"},"Remarks"),(0,s.kt)("p",null,'In the TypeScript language, a symbol can have multiple declarations. They are called "merged declarations"\nbecause they describe the same underlying JavaScript object. The ',(0,s.kt)("inlineCode",{parentName:"p"},"ae-different-release-tags")," is reported when\nmerged declarations have different release tags."),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"/** @public */\ninterface Size {\n  width: number;\n  height: number;\n}\n\n/** @beta */\nfunction Size(width: number, height: number): Size {\n  return { width, height };\n}\n\n// Warning: This symbol has another declaration with a different release tag.\n")),(0,s.kt)("p",null,"In the example above, the ",(0,s.kt)("inlineCode",{parentName:"p"},"Size")," symbol has an interface declaration that is marked as ",(0,s.kt)("inlineCode",{parentName:"p"},"@public"),", but a function\ndeclaration that is marked as ",(0,s.kt)("inlineCode",{parentName:"p"},"@beta"),", so the ",(0,s.kt)("inlineCode",{parentName:"p"},"ae-different-release-tags")," error is reported."),(0,s.kt)("p",null,"Note that mixed release tags are allowed for overloads of a function or method. For example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"/**\n * Combines two values, by adding the numbers.\n * @public\n */\nexport function combine(x: number, y: number): number;\n\n/**\n * Combines two values, by appending the strings.\n * @beta\n */\nexport function combine(x: string, y: string): string;\n\nexport function combine(x: number | string, y: number | string): number | string {\n  return x + y;\n}\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"It would be possible for API Extractor to allow different release tags for other types of declarations.\nGitHub ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/microsoft/rushstack/issues/972"},"issue #972"),"\nproposes this enhancement and discusses some of the challenges involved.")),(0,s.kt)("h2",{id:"how-to-fix"},"How to fix"),(0,s.kt)("p",null,"Change the symbol's declarations to have the same release tag."),(0,s.kt)("h2",{id:"see-also"},"See also"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/pages/tsdoc/doc_comment_syntax#release-tags"},"Doc comment syntax: Release tags"))))}f.isMDXComponent=!0}}]);