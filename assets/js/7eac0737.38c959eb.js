"use strict";(self.webpackChunkapi_extractor_com=self.webpackChunkapi_extractor_com||[]).push([[8819],{158:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(6393);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(r),y=a,m=d["".concat(p,".").concat(y)]||d[y]||u[y]||o;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=y;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},8877:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var n=r(9122),a=r(2501),o=(r(6393),r(158)),i=["components"],s={title:"@readonly"},p=void 0,l={unversionedId:"pages/tsdoc/tag_readonly",id:"pages/tsdoc/tag_readonly",title:"@readonly",description:"Tag type: modifier",source:"@site/docs/pages/tsdoc/tag_readonly.md",sourceDirName:"pages/tsdoc",slug:"/pages/tsdoc/tag_readonly",permalink:"/pages/tsdoc/tag_readonly",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/api-extractor.com/docs/pages/tsdoc/tag_readonly.md",tags:[],version:"current",frontMatter:{title:"@readonly"},sidebar:"docsSidebar",previous:{title:"@public",permalink:"/pages/tsdoc/tag_public"},next:{title:"@remarks",permalink:"/pages/tsdoc/tag_remarks"}},c={},d=[],u={toc:d},y="wrapper";function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)(y,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Tag type:")," modifier"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"TSDoc standardization:")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/microsoft/tsdoc/blob/master/tsdoc/src/details/Standardization.ts"},"extended")),(0,o.kt)("p",null,"This modifier tag is used with a property of a class or interface. It indicates that the property should be\ndocumented as being read-only, even if the type signature indicates otherwise."),(0,o.kt)("p",null,"This modifier is only needed in special situations. Generally API Extractor will use the property's\ntype signature to determine whether it is read-only."),(0,o.kt)("p",null,"However, suppose that a class property has a setter function that always throws an exception explaining\nthat the property cannot be assigned. In this situation, the ",(0,o.kt)("inlineCode",{parentName:"p"},"@readonly")," modifier should be added so that\nthe property will be documented as being read-only."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Usage example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"/** @public */\nexport class Widget {\n  ...\n  /**\n   * Everyday case: API Extractor will document this property as being read-only.\n   */\n  public get x(): number {\n    return this._x;\n  }\n\n  /**\n   * Special case:  We need to tell API Extractor to ignore the property setter.\n   * @readonly\n   */\n  public get title(): string {\n    return this._title;\n  }\n\n  public set title(value: string) {\n    throw new Error('This property is read-only!');\n  }\n}\n")))}m.isMDXComponent=!0}}]);