"use strict";(self.webpackChunkapi_extractor_com=self.webpackChunkapi_extractor_com||[]).push([[8905],{158:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var n=r(6393);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,g=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(g,i(i({ref:t},c),{},{components:r})):n.createElement(g,i({ref:t},c))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},449:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var n=r(9122),a=r(2501),o=(r(6393),r(158)),i=["components"],s={title:"The .d.ts rollup"},l=void 0,p={unversionedId:"pages/overview/demo_rollup",id:"pages/overview/demo_rollup",title:"The .d.ts rollup",description:'This article continues the tutorial from the "What is API Extractor?" page. It\'s recommended to start there.',source:"@site/docs/pages/overview/demo_rollup.md",sourceDirName:"pages/overview",slug:"/pages/overview/demo_rollup",permalink:"/pages/overview/demo_rollup",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/api-extractor.com/docs/pages/overview/demo_rollup.md",tags:[],version:"current",frontMatter:{title:"The .d.ts rollup"},sidebar:"docsSidebar",previous:{title:"The API report",permalink:"/pages/overview/demo_api_report"},next:{title:"API documentation",permalink:"/pages/overview/demo_docs"}},c={},u=[],m={toc:u},d="wrapper";function g(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)(d,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},'This article continues the tutorial from the "',(0,o.kt)("a",{parentName:"em",href:"/pages/overview/intro"},"What is API Extractor?"),"\" page. It's recommended to start there.")),(0,o.kt)("p",null,"The next API Extractor output that we'll discuss is the \"",(0,o.kt)("strong",{parentName:"p"},".d.ts rollup"),'." Recall that our example project\nhas these TypeScript source files:'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"src/index.ts"),(0,o.kt)("li",{parentName:"ul"},"src/log/Log.ts"),(0,o.kt)("li",{parentName:"ul"},"src/log/ILogHandler.ts")),(0,o.kt)("p",null,"Each of the above files builds into a corresponding set of intermediary outputs:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"lib/index.d.ts"),(0,o.kt)("li",{parentName:"ul"},"lib/index.js"),(0,o.kt)("li",{parentName:"ul"},"lib/log/Log.d.ts"),(0,o.kt)("li",{parentName:"ul"},"lib/log/Log.js"),(0,o.kt)("li",{parentName:"ul"},"lib/log/ILogHandler.d.ts"),(0,o.kt)("li",{parentName:"ul"},"lib/log/ILogHandler.js")),(0,o.kt)("p",null,"We can use a linker such as ",(0,o.kt)("a",{parentName:"p",href:"https://webpack.js.org"},"Webpack")," to roll up the ","*",".js files into a combined\nbundle file: ",(0,o.kt)("strong",{parentName:"p"},"dist/sp-core-library.js")),(0,o.kt)("p",null,"In the same way, API Extractor can produce a rollup for your ","*",".d.ts files: ",(0,o.kt)("strong",{parentName:"p"},"dist/sp-core-library.d.ts")),(0,o.kt)("p",null,'Optionally, we can also enable .d.ts "trimming" which excludes the declarations marked as ',(0,o.kt)("inlineCode",{parentName:"p"},"@beta"),"\nfrom appearing in the rollup file: ",(0,o.kt)("strong",{parentName:"p"},"dist/sp-core-library-public.d.ts")),(0,o.kt)("p",null,"The trimmed file contents would look like this:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"dist/sp-core-library-public.d.ts")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"/* Excluded from this release type: ILogHandler */\n\n/**\n * The Log class provides static methods for logging messages at different levels (verbose,\n * info, warning, error) and with context information. Context information helps identify\n * which component generated the messages and makes the messages useful and filterable.\n * @public\n */\nexport declare class Log {\n  private static _logHandler;\n\n  /* Excluded from this release type: initialize */\n\n  /**\n   * Logs a verbose message\n   * @param   source - the source from where the message is logged, e.g., the class name.\n   *          The source provides context information for the logged message.\n   *          If the source's length is more than 20, only the first 20 characters are kept.\n   * @param   message - the message to be logged\n   *          If the message's length is more than 100, only the first 100 characters are kept.\n   */\n  public static verbose(source: string, message: string, scope?: ServiceScope): void;\n\n  . . .\n  public static info(source: string, message: string): void;\n\n  . . .\n  public static warn(source: string, message: string): void;\n\n  . . .\n  public static error(source: string, error: Error): void;\n}\n")),(0,o.kt)("p",null,"With trimming enabled, developers no longer have to worry about accidentally taking a dependency on the\nunstable ",(0,o.kt)("inlineCode",{parentName:"p"},"Log.initialize()")," function when they are targeting production. That function won't even appear\nin their VS Code IntelliSense! If they want to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"@beta"),' APIs, they would explicitly opt-in to a\n"beta" release. For the real ',(0,o.kt)("strong",{parentName:"p"},"@microsoft/sp-core-library"),' package, "opting in" is accomplished by installing\n',(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@microsoft/sp-core-library?activeTab=versions"},"a special version number"),"\nwith the ",(0,o.kt)("inlineCode",{parentName:"p"},"-plusbeta")," suffix (however other approaches are possible as well)."),(0,o.kt)("p",null,"API Extractor's .d.ts rollup feature is fairly sophisticated. For example, it supports:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"declarations whose exported name is different from the original definition"),(0,o.kt)("li",{parentName:"ul"},"types imported from other packages"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"export * from")," relationships with other packages"),(0,o.kt)("li",{parentName:"ul"},"merged declarations")),(0,o.kt)("p",null,"One significant limitation for .d.ts rollups is the assumption that your package has a single entry point.\n(If that's not the case, you probably won't be able to use this feature of API Extractor, although you can still\nuse the API report and documentation generation features.)"))}g.isMDXComponent=!0}}]);