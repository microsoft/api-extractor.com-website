"use strict";(self.webpackChunkapi_extractor_com=self.webpackChunkapi_extractor_com||[]).push([[6208],{158:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(6393);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7675:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var r=n(9122),a=n(2501),i=(n(6393),n(158)),o=["components"],s={title:"ae-unresolved-inheritdoc-base"},c=void 0,l={unversionedId:"pages/messages/ae-unresolved-inheritdoc-base",id:"pages/messages/ae-unresolved-inheritdoc-base",title:"ae-unresolved-inheritdoc-base",description:'"The @inheritDoc tag needs a TSDoc declaration reference; signature matching is not supported yet"',source:"@site/docs/pages/messages/ae-unresolved-inheritdoc-base.md",sourceDirName:"pages/messages",slug:"/pages/messages/ae-unresolved-inheritdoc-base",permalink:"/pages/messages/ae-unresolved-inheritdoc-base",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/api-extractor.com/docs/pages/messages/ae-unresolved-inheritdoc-base.md",tags:[],version:"current",frontMatter:{title:"ae-unresolved-inheritdoc-base"},sidebar:"docsSidebar",previous:{title:"ae-setter-with-docs",permalink:"/pages/messages/ae-setter-with-docs"},next:{title:"ae-unresolved-inheritdoc-reference",permalink:"/pages/messages/ae-unresolved-inheritdoc-reference"}},p={},d=[{value:"Remarks",id:"remarks",level:2},{value:"How to fix",id:"how-to-fix",level:2},{value:"See also",id:"see-also",level:2}],u={toc:d},m="wrapper";function h(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},'"The @inheritDoc tag needs a TSDoc declaration reference; signature matching is not supported yet"')),(0,i.kt)("h2",{id:"remarks"},"Remarks"),(0,i.kt)("p",null,"Suppose we have some declarations like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export class Base {\n  /**\n   * Some documentation that we want to inherit\n   */\n  public member(): void {}\n}\n\nexport interface IChild {\n  /**\n   * Some documentation that we want to inherit\n   */\n  value: string;\n}\n")),(0,i.kt)("p",null,"...and then we try to inherit their documentation like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export class Child extends Base implements IChild {\n  /** {@inheritDoc} */ // <-- not supported\n  public member(): void {}\n\n  /** {@inheritDoc} */ // <-- not supported\n  public value: string = 'example';\n}\n\n// Warning: The @inheritDoc tag needs a TSDoc declaration reference;\n// signature matching is not supported yet\n")),(0,i.kt)("p",null,"It would be convenient if the ",(0,i.kt)("inlineCode",{parentName:"p"},"{@inheritDoc}")," tag could be matched with the corresponding member from the\nbase class or interface. This may be implemented in the future; however, it is not supported today.\nInstead, you need to provide an explicit declaration reference like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export class Child extends Base implements IChild {\n  /** {@inheritDoc Base.member} */\n  public member(): void {}\n\n  /** {@inheritDoc IChild.value} */\n  public value: string = 'example';\n}\n")),(0,i.kt)("h2",{id:"how-to-fix"},"How to fix"),(0,i.kt)("p",null,"Add an explicit declaration reference to the ",(0,i.kt)("inlineCode",{parentName:"p"},"{@inheritDoc}")," tag."),(0,i.kt)("h2",{id:"see-also"},"See also"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/pages/tsdoc/tag_inheritdoc"},"@inheritDoc tag"))))}h.isMDXComponent=!0}}]);