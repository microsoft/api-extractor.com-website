"use strict";(self.webpackChunkapi_extractor_com=self.webpackChunkapi_extractor_com||[]).push([[813],{158:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(6393);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=p(a),u=r,d=g["".concat(o,".").concat(u)]||g[u]||m[u]||i;return a?n.createElement(d,s(s({ref:t},c),{},{components:a})):n.createElement(d,s({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[g]="string"==typeof e?e:r,s[1]=l;for(var p=2;p<i;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6031:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>g});var n=a(9122),r=a(2501),i=(a(6393),a(158)),s=["components"],l={title:"ae-missing-release-tag"},o=void 0,p={unversionedId:"pages/messages/ae-missing-release-tag",id:"pages/messages/ae-missing-release-tag",title:"ae-missing-release-tag",description:'"\\\\\\ is part of the package\'s API, but it is missing a release tag (@alpha, @beta, @public, or @internal)."_',source:"@site/docs/pages/messages/ae-missing-release-tag.md",sourceDirName:"pages/messages",slug:"/pages/messages/ae-missing-release-tag",permalink:"/pages/messages/ae-missing-release-tag",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/api-extractor.com/docs/pages/messages/ae-missing-release-tag.md",tags:[],version:"current",frontMatter:{title:"ae-missing-release-tag"},sidebar:"docsSidebar",previous:{title:"ae-missing-getter",permalink:"/pages/messages/ae-missing-getter"},next:{title:"ae-preapproved-bad-release-tag",permalink:"/pages/messages/ae-preapproved-bad-release-tag"}},c={},g=[{value:"Remarks",id:"remarks",level:2},{value:"How to fix",id:"how-to-fix",level:2},{value:"See also",id:"see-also",level:2}],m={toc:g},u="wrapper";function d(e){var t=e.components,a=(0,r.Z)(e,s);return(0,i.kt)(u,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},'"',"_","_","_"," is part of the package's API, but it is missing a release tag (@alpha, @beta, @public, or @internal).\"")),(0,i.kt)("h2",{id:"remarks"},"Remarks"),(0,i.kt)("p",null,"API Extractor uses release tags to track the maturity of your API. By default, it requires every declaration\nin your API to have a release tag."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'/**\n * The widget class\n */\nexport class Widget {\n  // <-- missing release tag\n  /** Renders the widget */\n  public render(): void {}\n}\n\n// Warning: "Widget" is part of the package\'s API, but it is missing\n// a release tag (@alpha, @beta, @public, or @internal)\n')),(0,i.kt)("p",null,"We can fix this warning by adding the ",(0,i.kt)("inlineCode",{parentName:"p"},"@public")," release tag like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"/**\n * The widget class\n * @public\n */\nexport class Widget {\n  /** Renders the widget */\n  public render(): void {\n    // <-- release tag not required\n  }\n}\n")),(0,i.kt)("p",null,"Note that release tags are inherited from containers of nested declarations. Thus, ",(0,i.kt)("inlineCode",{parentName:"p"},"ae-missing-release-tag")," only\nconsiders the outermost container."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ae-missing-release-tag")," validation may seem a little cumbersome at first. However, requiring explicit release tags\nhas several benefits:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"It makes the visibility immediately obvious when reading code. For example, in a PR diff, the reviewer may\nnot be able to see the entry point, but the release tag clearly signals that this class should get special\nattention. It is part of your API signature.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When adding a new API, choosing a release tag requires the person to stop and think about visibility: How mature\nis this API design? Should it really be ",(0,i.kt)("inlineCode",{parentName:"p"},"@public"),", or should we maybe start with ",(0,i.kt)("inlineCode",{parentName:"p"},"@alpha")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"@beta"),"?")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"It avoids accidents. For example, it might be embarrassing to be browsing your API web site one day, and\ndiscover an internal class that got included unintentionally. The content may have been generated from private\ncode comments that nobody intended to share with a public audience!"))),(0,i.kt)("h2",{id:"how-to-fix"},"How to fix"),(0,i.kt)("p",null,"Fix this issue by adding a release tag to the comment."),(0,i.kt)("p",null,"Alternatively, if you really don't want to require explicit release tags, you can disable the ",(0,i.kt)("inlineCode",{parentName:"p"},"ae-missing-release-tag"),"\nvalidation by adding a section like this to your ",(0,i.kt)("strong",{parentName:"p"},"api-extractor.json")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'  "messages": {\n    "extractorMessageReporting": {\n      "ae-missing-release-tag": {\n        "logLevel": "none"\n      }\n    }\n  }\n')),(0,i.kt)("h2",{id:"see-also"},"See also"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/pages/configs/api-extractor_json#message-reporting-section"},"api-extractor.json config file")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/pages/tsdoc/doc_comment_syntax#release-tags"},"Doc comment syntax: Release tags"))))}d.isMDXComponent=!0}}]);